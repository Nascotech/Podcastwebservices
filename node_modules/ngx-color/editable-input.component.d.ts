import { EventEmitter, OnChanges, OnDestroy, OnInit } from '@angular/core';
import { Subscription } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
export declare class EditableInputComponent implements OnInit, OnChanges, OnDestroy {
    style: {
        wrap: {
            [key: string]: string;
        };
        input: {
            [key: string]: string;
        };
        label: {
            [key: string]: string;
        };
    };
    label: string;
    value: string | number;
    arrowOffset: number;
    dragLabel: boolean;
    dragMax: number;
    placeholder: string;
    onChange: EventEmitter<{}>;
    currentValue: string | number;
    blurValue: string;
    wrapStyle: {
        [key: string]: string;
    };
    inputStyle: {
        [key: string]: string;
    };
    labelStyle: {
        [key: string]: string;
    };
    focus: boolean;
    mousemove: Subscription;
    mouseup: Subscription;
    ngOnInit(): void;
    handleFocus($event: any): void;
    handleFocusOut($event: any): void;
    handleKeydown($event: any): void;
    handleKeyup($event: any): void;
    ngOnChanges(): void;
    ngOnDestroy(): void;
    subscribe(): void;
    unsubscribe(): void;
    handleMousedown($event: Event): void;
    handleDrag($event: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<EditableInputComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<EditableInputComponent, "color-editable-input", never, {
    "placeholder": "placeholder";
    "style": "style";
    "label": "label";
    "value": "value";
    "arrowOffset": "arrowOffset";
    "dragLabel": "dragLabel";
    "dragMax": "dragMax";
}, {
    "onChange": "onChange";
}, never>;
}
export declare class EditableInputModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<EditableInputModule, [typeof EditableInputComponent], [typeof ɵngcc1.CommonModule], [typeof EditableInputComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<EditableInputModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWRpdGFibGUtaW5wdXQuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImVkaXRhYmxlLWlucHV0LmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciwgT25DaGFuZ2VzLCBPbkRlc3Ryb3ksIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBFZGl0YWJsZUlucHV0Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMsIE9uRGVzdHJveSB7XG4gICAgc3R5bGU6IHtcbiAgICAgICAgd3JhcDoge1xuICAgICAgICAgICAgW2tleTogc3RyaW5nXTogc3RyaW5nO1xuICAgICAgICB9O1xuICAgICAgICBpbnB1dDoge1xuICAgICAgICAgICAgW2tleTogc3RyaW5nXTogc3RyaW5nO1xuICAgICAgICB9O1xuICAgICAgICBsYWJlbDoge1xuICAgICAgICAgICAgW2tleTogc3RyaW5nXTogc3RyaW5nO1xuICAgICAgICB9O1xuICAgIH07XG4gICAgbGFiZWw6IHN0cmluZztcbiAgICB2YWx1ZTogc3RyaW5nIHwgbnVtYmVyO1xuICAgIGFycm93T2Zmc2V0OiBudW1iZXI7XG4gICAgZHJhZ0xhYmVsOiBib29sZWFuO1xuICAgIGRyYWdNYXg6IG51bWJlcjtcbiAgICBwbGFjZWhvbGRlcjogc3RyaW5nO1xuICAgIG9uQ2hhbmdlOiBFdmVudEVtaXR0ZXI8e30+O1xuICAgIGN1cnJlbnRWYWx1ZTogc3RyaW5nIHwgbnVtYmVyO1xuICAgIGJsdXJWYWx1ZTogc3RyaW5nO1xuICAgIHdyYXBTdHlsZToge1xuICAgICAgICBba2V5OiBzdHJpbmddOiBzdHJpbmc7XG4gICAgfTtcbiAgICBpbnB1dFN0eWxlOiB7XG4gICAgICAgIFtrZXk6IHN0cmluZ106IHN0cmluZztcbiAgICB9O1xuICAgIGxhYmVsU3R5bGU6IHtcbiAgICAgICAgW2tleTogc3RyaW5nXTogc3RyaW5nO1xuICAgIH07XG4gICAgZm9jdXM6IGJvb2xlYW47XG4gICAgbW91c2Vtb3ZlOiBTdWJzY3JpcHRpb247XG4gICAgbW91c2V1cDogU3Vic2NyaXB0aW9uO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgaGFuZGxlRm9jdXMoJGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIGhhbmRsZUZvY3VzT3V0KCRldmVudDogYW55KTogdm9pZDtcbiAgICBoYW5kbGVLZXlkb3duKCRldmVudDogYW55KTogdm9pZDtcbiAgICBoYW5kbGVLZXl1cCgkZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgbmdPbkNoYW5nZXMoKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIHN1YnNjcmliZSgpOiB2b2lkO1xuICAgIHVuc3Vic2NyaWJlKCk6IHZvaWQ7XG4gICAgaGFuZGxlTW91c2Vkb3duKCRldmVudDogRXZlbnQpOiB2b2lkO1xuICAgIGhhbmRsZURyYWcoJGV2ZW50OiBhbnkpOiB2b2lkO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRWRpdGFibGVJbnB1dE1vZHVsZSB7XG59XG4iXX0=