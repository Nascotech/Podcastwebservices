import { EventEmitter, OnChanges } from '@angular/core';
import { HSLA, HSVA, HSVAsource } from './helpers/color.interfaces';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from './coordinates.directive';
export declare class SaturationComponent implements OnChanges {
    hsl: HSLA;
    hsv: HSVA;
    radius: number;
    pointer: {
        [key: string]: string;
    };
    circle: {
        [key: string]: string;
    };
    onChange: EventEmitter<{
        data: HSVAsource;
        $event: Event;
    }>;
    background: string;
    pointerTop: string;
    pointerLeft: string;
    ngOnChanges(): void;
    handleChange({ top, left, containerHeight, containerWidth, $event }: {
        top: any;
        left: any;
        containerHeight: any;
        containerWidth: any;
        $event: any;
    }): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SaturationComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SaturationComponent, "color-saturation", never, {
    "hsl": "hsl";
    "hsv": "hsv";
    "radius": "radius";
    "pointer": "pointer";
    "circle": "circle";
}, {
    "onChange": "onChange";
}, never>;
}
export declare class SaturationModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<SaturationModule, [typeof SaturationComponent], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.CoordinatesModule], [typeof SaturationComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<SaturationModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2F0dXJhdGlvbi5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsic2F0dXJhdGlvbi5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOzs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7O0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIsIE9uQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSFNMQSwgSFNWQSwgSFNWQXNvdXJjZSB9IGZyb20gJy4vaGVscGVycy9jb2xvci5pbnRlcmZhY2VzJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFNhdHVyYXRpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xuICAgIGhzbDogSFNMQTtcbiAgICBoc3Y6IEhTVkE7XG4gICAgcmFkaXVzOiBudW1iZXI7XG4gICAgcG9pbnRlcjoge1xuICAgICAgICBba2V5OiBzdHJpbmddOiBzdHJpbmc7XG4gICAgfTtcbiAgICBjaXJjbGU6IHtcbiAgICAgICAgW2tleTogc3RyaW5nXTogc3RyaW5nO1xuICAgIH07XG4gICAgb25DaGFuZ2U6IEV2ZW50RW1pdHRlcjx7XG4gICAgICAgIGRhdGE6IEhTVkFzb3VyY2U7XG4gICAgICAgICRldmVudDogRXZlbnQ7XG4gICAgfT47XG4gICAgYmFja2dyb3VuZDogc3RyaW5nO1xuICAgIHBvaW50ZXJUb3A6IHN0cmluZztcbiAgICBwb2ludGVyTGVmdDogc3RyaW5nO1xuICAgIG5nT25DaGFuZ2VzKCk6IHZvaWQ7XG4gICAgaGFuZGxlQ2hhbmdlKHsgdG9wLCBsZWZ0LCBjb250YWluZXJIZWlnaHQsIGNvbnRhaW5lcldpZHRoLCAkZXZlbnQgfToge1xuICAgICAgICB0b3A6IGFueTtcbiAgICAgICAgbGVmdDogYW55O1xuICAgICAgICBjb250YWluZXJIZWlnaHQ6IGFueTtcbiAgICAgICAgY29udGFpbmVyV2lkdGg6IGFueTtcbiAgICAgICAgJGV2ZW50OiBhbnk7XG4gICAgfSk6IHZvaWQ7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBTYXR1cmF0aW9uTW9kdWxlIHtcbn1cbiJdfQ==