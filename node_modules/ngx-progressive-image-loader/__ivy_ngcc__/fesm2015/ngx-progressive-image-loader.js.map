{"version":3,"file":"ngx-progressive-image-loader.js","sources":["ng:/ngx-progressive-image-loader/lib/config.ts","ng:/ngx-progressive-image-loader/lib/configuration.service.ts","ng:/ngx-progressive-image-loader/lib/util.ts","ng:/ngx-progressive-image-loader/lib/progressive-image-loader/progressive-image-loader.component.ts","ng:/ngx-progressive-image-loader/lib/image-placeholder/image-placeholder.component.ts","ng:/ngx-progressive-image-loader/lib/progressive-image/progressive-image.directive.ts","ng:/ngx-progressive-image-loader/lib/ngx-progressive-image-loader.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { InjectionToken } from '@angular/core';\r\n\r\nexport interface IImageLoaderOptions extends IntersectionObserverInit {\r\n  placeholderImageSrc?: string;\r\n  imageRatio: number;\r\n  filter?: string;\r\n  isAggressiveLoading?: boolean;\r\n  concurrentLoading?: number;\r\n}\r\nexport const IMAGE_LOADER_CONFIG_TOKEN = new InjectionToken<IImageLoaderOptions>(\r\n  'Image loader Config'\r\n);\r\n\r\nexport const DEFAULT_IMAGE_LOADER_OPTIONS = <IImageLoaderOptions>{\r\n  // root?: Element | null;\r\n  rootMargin: '10px',\r\n  threshold: [0.1, 0.5, 1],\r\n  imageRatio: 16 / 9,\r\n  placeholderImageSrc: '',\r\n  isAggressiveLoading: true,\r\n  concurrentLoading: 4\r\n};\r\n","import { Inject, Injectable } from '@angular/core';\r\n\r\nimport {\r\n  DEFAULT_IMAGE_LOADER_OPTIONS,\r\n  IImageLoaderOptions,\r\n  IMAGE_LOADER_CONFIG_TOKEN\r\n} from './config';\r\n\r\n@Injectable()\r\nexport class ConfigurationService {\r\n  config: IImageLoaderOptions;\r\n\r\n  constructor(@Inject(IMAGE_LOADER_CONFIG_TOKEN) options: IImageLoaderOptions) {\r\n    this.setConfig(options);\r\n  }\r\n\r\n  setConfig(config: IImageLoaderOptions) {\r\n    if (config) {\r\n      this.config = { ...DEFAULT_IMAGE_LOADER_OPTIONS, ...config };\r\n    } else {\r\n      this.config = DEFAULT_IMAGE_LOADER_OPTIONS;\r\n    }\r\n  }\r\n}\r\n","import { Renderer2 } from '@angular/core';\r\n\r\nexport function isSupportIntersectionObserver(window) {\r\n  return (\r\n    window &&\r\n    'IntersectionObserver' in window &&\r\n    'IntersectionObserverEntry' in window &&\r\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype\r\n  );\r\n}\r\n\r\nexport function isImagePicture(element: HTMLElement) {\r\n  return element instanceof HTMLImageElement || element instanceof HTMLPictureElement;\r\n}\r\n\r\nexport function setAttribute(\r\n  renderer: Renderer2,\r\n  attribute: string,\r\n  element: HTMLImageElement | HTMLSourceElement\r\n) {\r\n  renderer.setAttribute(element, attribute, element.dataset[attribute]);\r\n  // maybe doesn't matter\r\n  // renderer.removeAttribute(element, 'data-' + attribute);\r\n}\r\nexport function isPictureElement(element: HTMLElement) {\r\n  return element.nodeName === 'PICTURE';\r\n}\r\nexport function loadImage(renderer: Renderer2, image: HTMLImageElement) {\r\n  if (isPictureElement(image.parentElement)) {\r\n    const sourceElms = image.parentElement.children;\r\n    for (let index = 0; index < sourceElms.length; index++) {\r\n      const element = sourceElms[index];\r\n      if (element instanceof HTMLSourceElement) {\r\n        setAttribute(renderer, 'srcset', element);\r\n      } else if (element instanceof HTMLImageElement) {\r\n        setAttribute(renderer, 'src', element);\r\n      }\r\n    }\r\n  } else {\r\n    if (image.dataset.src) {\r\n      setAttribute(renderer, 'src', image);\r\n    }\r\n    if (image.dataset.srcset) {\r\n      setAttribute(renderer, 'srcset', image);\r\n    }\r\n  }\r\n}\r\n\r\nexport function isSpider(window) {\r\n  return (\r\n    (window && !('onscroll' in window)) ||\r\n    /(gle|ing|ro)bot|crawl|spider/i.test(window.navigator.userAgent)\r\n  );\r\n}\r\n","import { isPlatformBrowser } from '@angular/common';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  Inject,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  PLATFORM_ID,\r\n  Renderer2\r\n} from '@angular/core';\r\nimport { WINDOW } from 'ngx-window-token';\r\n\r\nimport { ConfigurationService } from '../configuration.service';\r\nimport { isSpider, isSupportIntersectionObserver, loadImage } from '../util';\r\n\r\n@Component({\r\n  selector: 'ngx-progressive-image-loader',\r\n  exportAs: 'ngxProgressiveImageLoader',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ProgressiveImageLoaderComponent implements OnInit, OnDestroy {\r\n  // define the placeholder height for all images inside this components\r\n  @Input() imageRatio: number;\r\n  // how many image at least should load at the same time\r\n  @Input() concurrentLoading: number;\r\n  // is going to load images that are being observed but haven't been intersected yet when loading counter < concurrentLoading\r\n  @Input() isAggressiveLoading: boolean;\r\n  @Input() filter: string;\r\n  // the src of loading image\r\n  @Input() placeholderImageSrc: string;\r\n\r\n  intersectionObserver: IntersectionObserver;\r\n  // to store observed images\r\n  targetMap = new Map();\r\n  // to maintain the sequence of observed images\r\n  targetQueue = <string[]>[];\r\n  // counter of current loading images\r\n  loading = 0;\r\n  public get isObservable(): boolean {\r\n    return !!this.intersectionObserver;\r\n  }\r\n\r\n  constructor(\r\n    public _Renderer: Renderer2,\r\n    public _ConfigurationService: ConfigurationService,\r\n    @Inject(PLATFORM_ID) private platformId: any,\r\n    @Optional()\r\n    @Inject(WINDOW)\r\n    private window: any\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    if (this.isAggressiveLoading === undefined) {\r\n      this.isAggressiveLoading = this._ConfigurationService.config.isAggressiveLoading;\r\n    }\r\n    if (this.concurrentLoading === undefined) {\r\n      this.concurrentLoading = this._ConfigurationService.config.concurrentLoading;\r\n    }\r\n    if (\r\n      this.window &&\r\n      isSupportIntersectionObserver(this.window) &&\r\n      !isSpider(this.window) &&\r\n      isPlatformBrowser(this.platformId)\r\n    ) {\r\n      if (!this.imageRatio) {\r\n        this.imageRatio = this._ConfigurationService.config.imageRatio;\r\n      }\r\n\r\n      if (!this.filter) {\r\n        this.filter = this._ConfigurationService.config.filter;\r\n      }\r\n      if (!this.placeholderImageSrc) {\r\n        this.placeholderImageSrc = this._ConfigurationService.config.placeholderImageSrc;\r\n      }\r\n      this.intersectionObserver = new IntersectionObserver(\r\n        this.onIntersectionChanged.bind(this),\r\n        this._ConfigurationService.config\r\n      );\r\n    }\r\n  }\r\n\r\n  observe(target: HTMLImageElement) {\r\n    // so intersection observer can always detect it correctly, otherwise image elements with 0 in height sometime don't load correctly\r\n    target.style.minHeight = '1rem';\r\n    this.intersectionObserver.observe(target);\r\n    this.targetMap.set(target.dataset.src, target);\r\n    this.targetQueue.push(target.dataset.src);\r\n  }\r\n\r\n  unobserve(target: HTMLImageElement) {\r\n    target.style.minHeight = 'initial';\r\n    this.targetMap.delete(target.dataset.src);\r\n    this.intersectionObserver.unobserve(target);\r\n  }\r\n  // called after an image loaded\r\n  imageLoaded() {\r\n    this.loading--;\r\n    while (\r\n      this.isAggressiveLoading &&\r\n      this.targetQueue &&\r\n      this.targetQueue.length &&\r\n      this.loading <= this.concurrentLoading\r\n    ) {\r\n      const next = this.targetQueue.shift();\r\n      this.targetMap.has(next) && this.loadImage(this.targetMap.get(next));\r\n    }\r\n  }\r\n  onIntersectionChanged(entries: IntersectionObserverEntry[], observer: IntersectionObserver) {\r\n    entries.forEach(entry => {\r\n      if (entry.isIntersecting) {\r\n        this.loadImage(entry.target as HTMLImageElement);\r\n      }\r\n    });\r\n  }\r\n  // start loading an image\r\n  loadImage(image: HTMLImageElement) {\r\n    // Stop observing the current target\r\n    this.unobserve(image);\r\n    this.loading++;\r\n    loadImage(this._Renderer, image);\r\n  }\r\n\r\n  reset() {\r\n    this.targetQueue = [];\r\n    this.targetMap = new Map();\r\n    this.isObservable && this.intersectionObserver.disconnect();\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.isObservable && this.intersectionObserver.disconnect();\r\n    this.intersectionObserver = this.targetQueue = this.targetMap = undefined;\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, HostBinding, Input, OnInit } from '@angular/core';\r\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\r\n\r\nimport { ProgressiveImageLoaderComponent } from '../progressive-image-loader/progressive-image-loader.component';\r\n\r\n@Component({\r\n  selector: 'ngx-image-placeholder',\r\n  template: `\r\n    <img class=\"placeholder-loading-image\" [src]=\"safeLoadingImage\" [style.filter]=\"imageFilter\" />\r\n    <ng-content></ng-content>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ImagePlaceholderComponent implements OnInit {\r\n  @HostBinding('class') class = 'ngx-image-placeholder';\r\n  @HostBinding('style')\r\n  get placeHolder(): SafeStyle {\r\n    return this.sanitizer.bypassSecurityTrustStyle(\r\n      `padding-bottom: ${100 / (this.imageRatio || this._ProgressiveImageLoader.imageRatio)}%;`\r\n    );\r\n  }\r\n\r\n  // to create a placeholder before finish loading the real image to avoid reflow\r\n  @Input() imageRatio: number;\r\n  // a loading image showing before the real image is loaded\r\n  @Input() placeholderImageSrc: string;\r\n\r\n  get imageFilter(): SafeStyle {\r\n    return this.sanitizer.bypassSecurityTrustStyle(`${this._ProgressiveImageLoader.filter}`);\r\n  }\r\n\r\n  get safeLoadingImage(): SafeStyle {\r\n    return this.sanitizer.bypassSecurityTrustUrl(\r\n      this.placeholderImageSrc || this._ProgressiveImageLoader.placeholderImageSrc\r\n    );\r\n  }\r\n\r\n  constructor(\r\n    private sanitizer: DomSanitizer,\r\n    private _ProgressiveImageLoader: ProgressiveImageLoaderComponent\r\n  ) {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  Optional,\r\n  Output,\r\n  Renderer2,\r\n  SimpleChanges\r\n} from '@angular/core';\r\n\r\nimport { ConfigurationService } from '../configuration.service';\r\nimport { ImagePlaceholderComponent } from '../image-placeholder/image-placeholder.component';\r\nimport { ProgressiveImageLoaderComponent } from '../progressive-image-loader/progressive-image-loader.component';\r\nimport { isPictureElement, loadImage } from '../util';\r\n\r\n@Directive({\r\n  // make sure the element is an image element\r\n  selector: 'img[ngxProgressiveImage], source[ngxProgressiveImage]'\r\n})\r\nexport class ProgressiveImageDirective implements OnInit, OnChanges {\r\n  _imageRatio: number;\r\n  // to create a placeholder before finish loading the real image to avoid reflow\r\n  @Input()\r\n  set imageRatio(value: number) {\r\n    this._imageRatio = value;\r\n  }\r\n  get imageRatio() {\r\n    return this._imageRatio || this._ProgressiveImageLoader.imageRatio;\r\n  }\r\n\r\n  // a loading image showing before the real image is loaded\r\n  _placeholderImageSrc: string;\r\n  @Input()\r\n  set placeholderImageSrc(value: string) {\r\n    this._placeholderImageSrc = value;\r\n  }\r\n\r\n  get placeholderImageSrc(): string {\r\n    return this._placeholderImageSrc || this._ProgressiveImageLoader.placeholderImageSrc;\r\n  }\r\n  @Input() src: string;\r\n  @Input() srcset: string;\r\n  @Input() noPlaceholder = false;\r\n  @Output() onImageLoaded = new EventEmitter<HTMLImageElement>();\r\n  imageElement: HTMLImageElement;\r\n  isObserved = false;\r\n  constructor(\r\n    private _ElementRef: ElementRef,\r\n    public _Renderer: Renderer2,\r\n    public _ConfigurationService: ConfigurationService,\r\n    @Optional()\r\n    @Inject(ImagePlaceholderComponent)\r\n    private _ImagePlaceholder: ImagePlaceholderComponent,\r\n    @Inject(ProgressiveImageLoaderComponent)\r\n    private _ProgressiveImageLoader: ProgressiveImageLoaderComponent\r\n  ) {}\r\n  ngOnInit(): void {\r\n    this.imageElement = this._ElementRef.nativeElement;\r\n    this.setDataSrc('data-src', this.src);\r\n    this.setDataSrc('data-srcset', this.srcset);\r\n    if (this._ProgressiveImageLoader.isObservable) {\r\n      // only image element need to be observe and have onload event\r\n      if (this.imageElement instanceof HTMLImageElement) {\r\n        this.isObserved = true;\r\n        this._ProgressiveImageLoader.observe(this.imageElement);\r\n        this.imageElement.onload = () => {\r\n          this.onImageLoaded.emit(this.imageElement);\r\n          this.imageElement.classList.add('loaded');\r\n          this._ProgressiveImageLoader.imageLoaded();\r\n        };\r\n        if (!this._ImagePlaceholder && !this.noPlaceholder) {\r\n          this.setPlaceholder();\r\n        }\r\n      }\r\n    } else {\r\n      // show image directly\r\n      loadImage(this._Renderer, this.imageElement);\r\n      this.imageElement.classList.add('loaded');\r\n    }\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    changes.src && !changes.src.isFirstChange() && this.setDataSrc('data-src', this.src);\r\n    changes.srcset &&\r\n      !changes.srcset.isFirstChange() &&\r\n      this.setDataSrc('data-srcset', this.srcset);\r\n\r\n    if (\r\n      this.isObserved &&\r\n      ((changes.src && !changes.src.isFirstChange()) ||\r\n        (changes.srcset && !changes.srcset.isFirstChange()))\r\n    ) {\r\n      this._ProgressiveImageLoader.unobserve(this.imageElement);\r\n      this._ProgressiveImageLoader.observe(this.imageElement);\r\n    }\r\n  }\r\n  setDataSrc(attr: string, value: string) {\r\n    value && this._Renderer.setAttribute(this.imageElement, attr, value);\r\n  }\r\n\r\n  setPlaceholder() {\r\n    const parentElement = this.imageElement.parentElement;\r\n    const placeholder = this.createPlaceholder(this.createPlaceholderImage());\r\n    if (isPictureElement(parentElement)) {\r\n      const pictureParent = parentElement.parentElement;\r\n      this.insertPlaceholder(pictureParent, parentElement, placeholder);\r\n    } else {\r\n      this.insertPlaceholder(parentElement, this.imageElement, placeholder);\r\n    }\r\n  }\r\n\r\n  private insertPlaceholder(\r\n    parentElement: HTMLElement,\r\n    imagePicture: HTMLElement,\r\n    placeholder: HTMLElement\r\n  ) {\r\n    parentElement.insertBefore(placeholder, imagePicture);\r\n    placeholder.style.paddingBottom = `${100 / this.imageRatio}%`;\r\n    placeholder.appendChild(imagePicture);\r\n  }\r\n\r\n  private createPlaceholder(placeholderImage: HTMLImageElement) {\r\n    const placeholder = document.createElement('div');\r\n    placeholder.classList.add('ngx-image-placeholder');\r\n    placeholder.appendChild(placeholderImage);\r\n    return placeholder;\r\n  }\r\n\r\n  createPlaceholderImage() {\r\n    const img = new Image();\r\n    img.classList.add('placeholder-loading-image');\r\n    img.style.filter = this._ProgressiveImageLoader.filter;\r\n    img.src = this.placeholderImageSrc;\r\n    return img;\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\n\r\nimport { IImageLoaderOptions, IMAGE_LOADER_CONFIG_TOKEN } from './config';\r\nimport { ConfigurationService } from './configuration.service';\r\nimport { ImagePlaceholderComponent } from './image-placeholder/image-placeholder.component';\r\nimport { ProgressiveImageLoaderComponent } from './progressive-image-loader/progressive-image-loader.component';\r\nimport { ProgressiveImageDirective } from './progressive-image/progressive-image.directive';\r\n\r\nexport function ConfigurationServiceFactory(options: IImageLoaderOptions) {\r\n  return new ConfigurationService(options);\r\n}\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [\r\n    ProgressiveImageLoaderComponent,\r\n    ProgressiveImageDirective,\r\n    ImagePlaceholderComponent\r\n  ],\r\n  exports: [ProgressiveImageLoaderComponent, ProgressiveImageDirective, ImagePlaceholderComponent]\r\n})\r\nexport class NgxProgressiveImageLoaderModule {\r\n  public static forRoot(config?: IImageLoaderOptions): ModuleWithProviders {\r\n    return {\r\n      ngModule: NgxProgressiveImageLoaderModule,\r\n      providers: [\r\n        { provide: IMAGE_LOADER_CONFIG_TOKEN, useValue: config },\r\n        {\r\n          provide: ConfigurationService,\r\n          useFactory: ConfigurationServiceFactory,\r\n          deps: [IMAGE_LOADER_CONFIG_TOKEN]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"]}